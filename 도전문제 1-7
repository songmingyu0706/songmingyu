{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled6.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyNxnB96nU91trARhYcMEEph",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/songmingyu0706/songmingyu/blob/main1/%EB%8F%84%EC%A0%84%EB%AC%B8%EC%A0%9C%201-7\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 137
        },
        "id": "MEuR9blT1qBP",
        "outputId": "90d0cde9-e233-4416-d2c6-fd9d78c896ce"
      },
      "outputs": [
        {
          "output_type": "error",
          "ename": "IndentationError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-1-450ffafbde3c>\"\u001b[0;36m, line \u001b[0;32m122\u001b[0m\n\u001b[0;31m    t.write(\"안녕하세요?\" + s + \"씨, 터틀 인사드립니다.\")\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m expected an indented block\n"
          ]
        }
      ],
      "source": [
        "print(\"안녕하세요?\")\n",
        "\n",
        "print(\"programming에 입문하신 것을 축하드립니다.\")\n",
        "\n",
        "print(3.141592*10.0*10.0)\n",
        "\n",
        "print((1/100)*1234)\n",
        "\n",
        "import turtle\n",
        "t = turtle.Turtle()\n",
        "t.shape(\"turtle\");\n",
        "t.forward(100);\n",
        "t.left(120);\n",
        "t.forward(100);\n",
        "t.left(120);\n",
        "t.forward(100);\n",
        "t.left(120);\n",
        "\n",
        "import turtle\n",
        "t = turtle.Turtle()\n",
        "t.shape(\"turtle\");\n",
        "t.forward(100);\n",
        "t.left(90);\n",
        "t.forward(100);\n",
        "t.left(90);\n",
        "t.forward(100);\n",
        "t.left(90);\n",
        "t.forward(100);\n",
        "t.left(90);\n",
        "\n",
        "import turtle\n",
        "t = turtle.Turtle()\n",
        "t.shape(\"turtle\");\n",
        "t.forward(100);\n",
        "t.left(60);\n",
        "t.forward(100);\n",
        "t.left(60);\n",
        "t.forward(100);\n",
        "t.left(60);\n",
        "t.forward(100);\n",
        "t.left(60);\n",
        "t.forward(100);\n",
        "t.left(60);\n",
        "t.forward(100);\n",
        "t.left(60);\n",
        "\n",
        "import turtle\n",
        "t = turtle.Turtle()\n",
        "t.shape(\"turtle\")\n",
        "radius = 50\n",
        "x = 30\n",
        "t.circle(radius)\n",
        "t.fd(x)\n",
        "t.circle(radius)\n",
        "x = 50\n",
        "t.fd(x)\n",
        "t.circle(radius)\n",
        "\n",
        "x = int(input(\"첫 번째 정수를 입력하시오: \"))\n",
        "y = int(input(\"두 번째 정수를 입력하시오: \"))\n",
        "print(x, \" + \", y, \" = \", x + y)\n",
        "print(x, \" - \", y, \" = \", x - y)\n",
        "print(x, \" * \", y, \" = \", x * y)\n",
        "print(x, \" / \", y, \" = \", x / y)\n",
        "\n",
        "name = input(\"이름을 입력하시오: \")\n",
        "print(name, \" 씨, 안녕하세요?\")\n",
        "print(\"파이썬에 오신 것을 환영합니다.\")\n",
        "x = int(input(\"첫 번째 정수를 입력하시오: \"))\n",
        "y = int(input(\"두 번째 정수를 입력하시오: \"))\n",
        "print(x, \" 과 \", y, \" 의 합은 \", x + y, \" 입니다.\")\n",
        "\n",
        "total = 100000 # 총 재료비용\n",
        "americano_price = 2000\n",
        "cafelatte_price = 3000\n",
        "capucino_price = 3500\n",
        "americanos = int(input(\"아메리카노 판매 개수: \"))\n",
        "cafelattes = int(input(\"카페라테 판매 개수: \"))\n",
        "capucinos = int(input(\"카푸치노 판매 개수: \"))\n",
        "sales = americanos*americano_price\n",
        "sales = sales + cafelattes * cafelatte_price\n",
        "sales = sales + capucinos * capucino_price\n",
        "print(\"총 매출은\", sales, \"입니다.\")\n",
        "if (total < sales) : print(\"흑자입니다.\")\n",
        "else : print(\"적자입니다.\")\n",
        "\n",
        "ctemp = int(input(\"섭씨온도: \"))\n",
        "ftemp = 9/5*ctemp+32\n",
        "print(\"화씨온도: \",ftemp)\n",
        "\n",
        "money = int(input(\"투입한 돈: \"))\n",
        "price = int(input(\"물건 값: \"))\n",
        "change = money - price\n",
        "print(\"거스름돈: \",change)\n",
        "coin500s = change // 500\n",
        "change = change % 500\n",
        "coin100s = change // 100\n",
        "change = change % 100\n",
        "coin50s = change // 50\n",
        "change = change % 50\n",
        "coin10s = change // 10\n",
        "change = change % 10\n",
        "print(\"500원 동전의 개수: \", coin500s)\n",
        "print(\"100원 동전의 개수: \", coin100s)\n",
        "print(\"50원 동전의 개수: \", coin50s)\n",
        "print(\"10원 동전의 개수: \", coin10s)\n",
        "\n",
        "money = int(input(\"투입한 돈: \"))\n",
        "price = int(input(\"물건 값: \"))\n",
        "change = money - price\n",
        "coin500s = change // 500\n",
        "change = change % 500\n",
        "coin100s = change // 100\n",
        "print(\"500원 동전의 개수: \", coin500s)\n",
        "print(\"100원 동전의 개수: \", coin100s)\n",
        "\n",
        "import turtle\n",
        "t = turtle.Turtle()\n",
        "t.shape(\"turtle\")\n",
        "s = turtle.textinput(\"\",\"이름을 입력하시오: \")\n",
        "for i in range(4):\n",
        "t.write(\"안녕하세요?\" + s + \"씨, 터틀 인사드립니다.\")\n",
        "t.left(90)\n",
        "t.forward(100)\n",
        "\n",
        "print(\"안녕하세요?\")\n",
        "name = input(\"이름이 어떻게 되시나요? \")\n",
        "print(\"만나서 반갑습니다.\" + name + \"씨\")\n",
        "print(\"이름의 길이는 다음과 같군요:\", end = \" \")\n",
        "print(len(name))\n",
        "age = int(input(\"나이가 어떻게 되나요? \"))\n",
        "print(\"내년이면 \", str(age+1),\"이 되시는군요.\")\n",
        "hobby = input(\"취미가 무엇인가요?\")\n",
        "print(\"네 저도 \"+hobby+\" 좋아합니다.\")\n",
        "\n",
        "year = input(\"오늘의 연도를 입력하시오: \")\n",
        "month = input(\"오늘의 월을 입력하시오: \")\n",
        "date = input(\"오늘의 일을 입력하시오: \")\n",
        "print(month+\"/\", date+\"/\", year)\n",
        "\n",
        "import time\n",
        "now = time.time()\n",
        "thisYear = int(1970 + now//(365*24*3600))\n",
        "print(\"올해는 \",thisYear,\"입니다.\")\n",
        "age = int(input(\"몇 살이신지요? \"))\n",
        "print(\"2050년에는 \",(age+2050-thisYear),\"살 이시군요.\")\n",
        "\n",
        "age = int(input(\"나이를 입력하시오: \"))\n",
        "if age >= 15:\n",
        "print(\"이 영화를 보실 수 있습니다. 영화의 가격은 10000원입니다.\")\n",
        "else:\n",
        "print(\"이 영화를 보실 수 없습니다. 다른 영화를 보시겠어요?\")\n",
        "\n",
        "import turtle\n",
        "t = turtle.Turtle()\n",
        "t.width(3)\n",
        "t.shape(\"turtle\")\n",
        "t.shapesize(3, 3)\n",
        "while answer:\n",
        "command = input(\"명령을 입력하시오: \")\n",
        "if command == \"l\" or command == \"left\":\n",
        "t.left(90)\n",
        "t.forward(100)\n",
        "if command == \"r\" or command == \"right\":\n",
        "t.right(90)\n",
        "t.forward(100)\n",
        "\n",
        "import turtle\n",
        "t = turtle.Turtle()\n",
        "t.width(3)\n",
        "t.shape(\"turtle\")\n",
        "t.shapesize(3, 3)\n",
        "flag = True\n",
        "while flag:\n",
        "command = input(\"명령을 입력하시오: \")\n",
        "if command == \"l\" or command == \"left\":\n",
        "t.left(90)\n",
        "t.forward(100)\n",
        "if command == \"r\" or command == \"right\":\n",
        "t.right(90)\n",
        "t.forward(100)\n",
        "if command == \"q\" or command == \"quit\":\n",
        "flag = False\n",
        "\n",
        "import random\n",
        "print(\"주사위 던지기 게임을 시작합니다.\")\n",
        "dice = random.randrange(6)+1\n",
        "print(\"주사위 눈은 \"+str(dice)+\"입니다.\")\n",
        "print(\"게임이 종료되었습니다.\")\n",
        "\n",
        "import random\n",
        "time = random.randint(1,24)\n",
        "print(\"좋은 아침입니다. 지금 시각은 \" +str(time) + \"시 입니다.\")\n",
        "#sunny = random.choice([True,False])\n",
        "#if sunny :\n",
        "# print(\"현재 날씨가 화창합니다.\")\n",
        "#else:\n",
        "# print(\"현재 날씨가 화창하지 않습니다.\")\n",
        "if time >= 6 and time <9 and True:\n",
        "print(\"종달새가 노래를 한다.\")\n",
        "elif time >= 14 and time <16 and True:\n",
        "print(\"종달새가 노래를 한다.\")\n",
        "else:\n",
        "print(\"종달새가 노래를 하지 않는다.\")\n",
        "\n",
        "id = \"ilovepython\"\n",
        "pw = \"123456\"\n",
        "s = input(\"아이디를 입력하시오: \")\n",
        "if s == id:\n",
        "p = input(\"패스워드를 입력하시오: \")\n",
        "if p == pw:\n",
        "print(\"환영합니다.\")\n",
        "else:\n",
        "print(\"비밀번호가 잘못되었습니다.\")\n",
        "else:\n",
        "print(\"아이디를 찾을 수 없습니다.\")\n",
        "\n",
        "import random\n",
        "options = [\"왼쪽 상단\",\"왼쪽 하단\",\"중앙\",\"오른쪽 상단\",\"오른쪽 하단\"]\n",
        "computer_choice = random.choice(options)\n",
        "user_choice = input(\"어디를 수비하시겠어요?(왼쪽 상단, 왼쪽 하단, 중앙, 오른쪽 상단, 오른쪽\n",
        "하단)\")\n",
        "if computer_choice == user_choice:\n",
        "print(\"수비에 성공하셨습니다.\")\n",
        "else:\n",
        "print(\"페널티 킥이 성공하였습니다.\")\n",
        "\n",
        "import turtle\n",
        "t = turtle.Turtle()\n",
        "t.shape(\"turtle\")\n",
        "s = turtle.textinput(\"\",\"도형을 입력하시오: \")\n",
        "if s == \"사각형\":\n",
        "s = turtle.textinput(\"\",\"가로: \")\n",
        "w = int(s)\n",
        "s = turtle.textinput(\"\",\"세로: \")\n",
        "h = int(s)\n",
        "t.forward(w)\n",
        "t.left(90)\n",
        "t.forward(h)\n",
        "t.left(90)\n",
        "t.forward(w)\n",
        "t.left(90)\n",
        "t.forward(h)\n",
        "elif s == \"삼각형\":\n",
        "s = turtle.textinput(\"\",\"변: \")\n",
        "l = int(s)\n",
        "t.forward(l)\n",
        "t.left(120)\n",
        "t.forward(l)\n",
        "t.left(120)\n",
        "t.forward(l)\n",
        "elif s == \"원\":\n",
        "  s = turtle.textinput(\"\",\"반지름: \")\n",
        "r = int(s)\n",
        "t.circle(r)\n",
        "else:\n",
        "pass\n",
        "\n",
        "import turtle\n",
        "t = turtle.Turtle()\n",
        "t.shape(\"turtle\")\n",
        "for i in range(6):\n",
        "t.forward(100)\n",
        "t.left(360/6)\n",
        "\n",
        "import turtle\n",
        "t = turtle.Turtle()\n",
        "t.shape(\"turtle\")\n",
        "s = turtle.textinput(\"\",\"몇각형을 원하시나요? : \")\n",
        "n = int(s)\n",
        "s = turtle.textinput(\"\",\"한변의 크기를 입력해주세요 : \")\n",
        "len = int(s)\n",
        "for i in range(n):\n",
        "t.forward(len)\n",
        "t.left(360/n)\n",
        "\n",
        "import turtle\n",
        "import random\n",
        "t = turtle.Turtle()\n",
        "t.shape(\"turtle\")\n",
        "for i in range(30):\n",
        "length = random.randint(1,100)\n",
        "t.forward(length)\n",
        "angle = random.randint(1,4)\n",
        "t.right(90 * angle)\n",
        "\n",
        "i = 1\n",
        "while i <= 9:\n",
        "j = 1\n",
        "while j <= 9:\n",
        "print(i, \"*\", j, \"=\", i*j)\n",
        "j = j+1\n",
        "print(\" \")\n",
        "i = i+1\n",
        "\n",
        "import turtle\n",
        "t = turtle.Turtle()\n",
        "t.shape(\"turtle\")\n",
        "i = 0\n",
        "while i < 5:\n",
        "t.forward(50)\n",
        "t.right(144)\n",
        "\n",
        "import turtle\n",
        "import random\n",
        "colors = [\"red\", \"purple\", \"blue\", \"green\", \"yellow\", \"orange\"]\n",
        "t = turtle.Turtle()\n",
        "turtle.bgcolor(\"black\")\n",
        "t.speed(0)\n",
        "t.width(3)\n",
        "length = 10\n",
        "while length < 500:\n",
        "t.forward(length)\n",
        "t.pencolor(colors[length%6])\n",
        "angle = random.randint(1,100)\n",
        "t.right(angle)\n",
        "length += 5\n",
        "\n",
        "import random\n",
        "tries = 0\n",
        "guess = 0\n",
        "answer = random.randint(1,100)\n",
        "print(\"1부터 100 사이의 숫자를 맞추시오: \")\n",
        "while guess != answer:\n",
        "if tries < 10:\n",
        "guess = int(input(\"숫자를 입력하시오: \"))\n",
        "tries = tries + 1\n",
        "if guess < answer:\n",
        "print(\"낮음!\")\n",
        "elif guess > answer:\n",
        "print(\"높음!\")\n",
        "else:\n",
        "print(\"시도횟수를 초과하였습니다.\")\n",
        "break\n",
        "if guess == answer:\n",
        "print(\"축하합니다. 시도횟수= \", tries)\n",
        "else:\n",
        "print(\"정답은 \", answer)\n",
        "\n",
        "import random\n",
        "while True:\n",
        "  q = random.randint(0,1)\n",
        "x = random.randint(1,100)\n",
        "y = random.randint(1,100)\n",
        "if (q == 1) & (x > y):\n",
        "print(x, \"-\", y, \"=\", end= \" \")\n",
        "answer = int(input())\n",
        "if answer == x - y:\n",
        "print(\"잘했어요!!\")\n",
        "else:\n",
        "print(\"다음번에는 잘할 수 있죠?\")\n",
        "else:\n",
        "print(x, \"+\", y, \"=\", end= \" \")\n",
        "answer = int(input())\n",
        "if answer == x + y:\n",
        "print(\"잘했어요!!\")\n",
        "else:\n",
        "print(\"다음번에는 잘할 수 있죠?\")\n",
        "\n",
        "import random\n",
        "number = random.randint(1,8)\n",
        "list = [\"한 점의 의심도 없이 맞습니다.\", \"할 수 있습니다.\", \"물론입니다.\", \"글쎄요. 열심히 해야 할\n",
        "것입니다.\",\n",
        "\"안 될 것 같습니다.\", \"조금 더 노력하세요.\", \"행운을 빕니다.\", \"다음 달에 할 수 있을\n",
        "겁니다.\"]\n",
        "while True:\n",
        "name = input(\"이름: (종료하려면 엔터키) \")\n",
        "if name == '':\n",
        "break;\n",
        "question = input(\"무엇에 대하여 알고 싶은가요? \")\n",
        "print(name, \"님\", \"\\\"\", question ,\"\\\"에 대하여 질문 주셨군요.\")\n",
        "print(\"운명의 주사위를 굴려볼게요...\")\n",
        "print(list[number-1])\n",
        "\n",
        "import turtle\n",
        "t = turtle.Turtle()\n",
        "t.shape(\"turtle\")\n",
        "def shape(length): # length는 한변의 길이\n",
        "s = turtle.textinput(\"\",\"몇각형을 원하시나요? : \")\n",
        "n = int(s)\n",
        "for i in range(n):\n",
        "t.forward(length)\n",
        "t.left(360/n)\n",
        "t.up()\n",
        "t.goto(-200,0)\n",
        "t.down()\n",
        "shape(100);\n",
        "t.up()\n",
        "t.goto(0,0)\n",
        "t.down()\n",
        "shape(100);\n",
        "t.up()\n",
        "t.goto(200,0)\n",
        "t.down()\n",
        "shape(100);\n",
        "\n",
        "import turtle\n",
        "t = turtle.Turtle()\n",
        "t.shape(\"turtle\")\n",
        "def square(length,index):\n",
        "t.color(colorList[index])\n",
        "t.begin_fill()\n",
        "for i in range(4):\n",
        "t.forward(length)\n",
        "t.left(90)\n",
        "t.end_fill()\n",
        "colorList = [\"red\", \"blue\", \"green\"]\n",
        "x = -200\n",
        "for i in range(len(colorList)):\n",
        "t.up()\n",
        "t.goto(x,0)\n",
        "t.down()\n",
        "square(100,i);\n",
        "x+=200\n",
        "\n",
        "import turtle\n",
        "t = turtle.Turtle()\n",
        "def n_polygon(n, length):\n",
        "for i in range(n):\n",
        "t.forward(length)\n",
        "t.left(360/n)\n",
        "def get_color(index):\n",
        "list = [\"red\", \"orange\", \"yellow\", \"green\",\"blue\", \"navy\", \"purple\", \"gray\", \"skyblue\", \"pink\"]\n",
        "t.color(list[index])\n",
        "t.begin_fill()\n",
        "n_polygon(6,100)\n",
        "t.end_fill()\n",
        "for i in range(10):\n",
        "t.left(20)\n",
        "get_color(i)\n",
        "\n",
        "import turtle\n",
        "t = turtle.Turtle()\n",
        "def circle(length):\n",
        "t.circle(length)\n",
        "t.left(60)\n",
        "\n",
        "def drawit(x, y):\n",
        "t.penup()\n",
        "t.goto(x,y)\n",
        "t.pendown()\n",
        "t.begin_fill()\n",
        "t.color(\"green\")\n",
        "circle(50)\n",
        "t.end_fill()\n",
        "s = turtle.Screen()\n",
        "s.onscreenclick(drawit)\n",
        "\n",
        "import turtle\n",
        "import random\n",
        "def tree(length):\n",
        "angle = (random.randint(-20,20))\n",
        "if length > 5:\n",
        "t.forward(length)\n",
        "t.right(20 + angle)\n",
        "tree(length-15 *(random.random()+0.4))\n",
        "t.left(40 + (angle * 2))\n",
        "tree(length-15 *(random.random()+0.4))\n",
        "t.right(20 + angle)\n",
        "t.backward(length)\n",
        "t = turtle.Turtle()\n",
        "t.left(90)\n",
        "t.color(\"green\")\n",
        "t.speed(1)\n",
        "tree(90)"
      ]
    }
  ]
}